
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Mail, Phone, Send, MessageCircle, Loader2, Twitch, Users } from "lucide-react";
import { toast } from "sonner";
import emailjs from '@emailjs/browser';
import OptimizedImage from "./OptimizedImage";

const ContactForm = () => {
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    phone: "",
    game: "",
    message: ""
  });
  const [isLoading, setIsLoading] = useState(false);

  // EmailJS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è - –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
  const EMAILJS_CONFIG = {
    serviceId: 'service_3njoeza', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Service ID
    templateId: 'template_qf27ivk', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Template ID  
    publicKey: 'AkMK-87kW94De7wzD' // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Public Key
  };

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º EmailJS
  emailjs.init(EMAILJS_CONFIG.publicKey);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsLoading(true);

    try {
      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è EmailJS
      const templateParams = {
        from_name: formData.name,
        from_email: formData.email,
        phone: formData.phone,
        game: formData.game,
        message: formData.message,
        to_email: 'reksar9@mail.ru' // –í–∞—à–∞ –ø–æ—á—Ç–∞
      };

      console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:', templateParams);
      console.log('–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è EmailJS:', EMAILJS_CONFIG);

      // –í–ê–†–ò–ê–ù–¢ 1: –ü—Ä–æ–±—É–µ–º EmailJS
      try {
        await emailjs.send(
          EMAILJS_CONFIG.serviceId,
          EMAILJS_CONFIG.templateId,
          templateParams,
          EMAILJS_CONFIG.publicKey
        );
      } catch (emailjsError) {
        console.log('EmailJS –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç —á–µ—Ä–µ–∑ Vercel API...');
        
        // –í–ê–†–ò–ê–ù–¢ 2: –ó–∞–ø–∞—Å–Ω–æ–π —á–µ—Ä–µ–∑ Vercel API
        const response = await fetch('/api/send-email', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            name: formData.name,
            email: formData.email,
            phone: formData.phone,
            game: formData.game,
            message: formData.message
          })
        });

        if (!response.ok) {
          throw new Error(`API error: ${response.status} ${response.statusText}`);
        }
        
        const result = await response.json();
        console.log('–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ API:', result);
      }

      toast.success("üéâ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.");
      setFormData({ name: "", email: "", phone: "", game: "", message: "" });
      
    } catch (error) {
      console.error('–î–µ—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ EmailJS:', error);
      
      // –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –æ—à–∏–±–∫–∏
      console.log('–í—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ—à–∏–±–∫–∏:', Object.keys(error || {}));
      console.log('JSON –æ—à–∏–±–∫–∏:', JSON.stringify(error, null, 2));
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫ EmailJS
      if (error && typeof error === 'object') {
        console.log('status:', (error as any).status);
        console.log('text:', (error as any).text);
        console.log('message:', (error as any).message);
        console.log('name:', (error as any).name);
      }
      
      // –ë–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
      if (error instanceof Error) {
        console.error('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏:', error.message);
        console.error('–¢–∏–ø –æ—à–∏–±–∫–∏:', error.name);
      }
      
      // –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö
      let errorMessage = "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏. ";
      
      if (error && typeof error === 'object' && 'status' in error) {
        const status = (error as any).status;
        const text = (error as any).text || '';
        
        console.log(`–°—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏: ${status}, –¢–µ–∫—Å—Ç: ${text}`);
        
        switch (status) {
          case 400:
            errorMessage += "–ù–µ–≤–µ—Ä–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ EmailJS.";
            break;
          case 401:
            errorMessage += "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ EmailJS. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Public Key.";
            break;
          case 402:
            errorMessage += "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ EmailJS.";
            break;
          case 404:
            errorMessage += "–°–µ—Ä–≤–∏—Å –∏–ª–∏ —à–∞–±–ª–æ–Ω EmailJS –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ ID.";
            break;
          case 412:
            errorMessage += "–®–∞–±–ª–æ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–≤–µ—Ä–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.";
            break;
          default:
            errorMessage += `–ö–æ–¥ –æ—à–∏–±–∫–∏: ${status}. ${text || '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'}`;
        }
      } else {
        errorMessage += "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –Ω–∞–ø—Ä—è–º—É—é.";
      }
      
      toast.error(errorMessage);
    } finally {
      setIsLoading(false);
    }
  };

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  return (
    <section className="py-20 bg-gradient-to-b from-black to-gray-900">
      <div className="container mx-auto px-6">
        <div className="text-center mb-16 animate-fade-in">
          <div className="flex items-center justify-center mb-6">
            <OptimizedImage 
              src="/lovable-uploads/5da7a7cd-8dae-461d-a1b6-556993f9a88e.png" 
              alt="Place of Power"
              className="w-16 h-16 object-contain mr-4"
            />
            <h2 className="text-4xl md:text-5xl font-bold text-white">
              –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏
            </h2>
          </div>
          <p className="text-lg text-gray-400 max-w-3xl mx-auto">
            –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∫–∏–±–µ—Ä—Å–ø–æ—Ä—Ç—É –¥–ª—è –≤—Å–µ—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–≤. 
            –ü–æ–¥–±–µ—Ä—ë–º –∏–≥—Ä—É –∏ —Å–æ—Å—Ç–∞–≤–∏–º –≥—Ä–∞—Ñ–∏–∫ –∑–∞–Ω—è—Ç–∏–π.
          </p>
        </div>

        <div className="grid lg:grid-cols-2 gap-12 max-w-6xl mx-auto">
          <div className="animate-fade-in">
            <Card className="bg-gray-800/50 border-gray-700 backdrop-blur-sm">
              <CardHeader>
                <CardTitle className="text-2xl text-white mb-4">–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É</CardTitle>
              </CardHeader>
              <CardContent>
                <form onSubmit={handleSubmit} className="space-y-6">
                  <div className="grid md:grid-cols-2 gap-4">
                    <Input
                      name="name"
                      placeholder="–í–∞—à–µ –∏–º—è"
                      value={formData.name}
                      onChange={handleChange}
                      required
                      className="bg-gray-700/50 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500"
                    />
                    <Input
                      name="email"
                      type="email"
                      placeholder="Email"
                      value={formData.email}
                      onChange={handleChange}
                      required
                      className="bg-gray-700/50 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500"
                    />
                  </div>
                  
                  <div className="grid md:grid-cols-2 gap-4">
                    <Input
                      name="phone"
                      placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
                      value={formData.phone}
                      onChange={handleChange}
                      className="bg-gray-700/50 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500"
                    />
                    <Input
                      name="game"
                      placeholder="–ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∞—è –∏–≥—Ä–∞"
                      value={formData.game}
                      onChange={handleChange}
                      className="bg-gray-700/50 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500"
                    />
                  </div>
                  
                  <Textarea
                    name="message"
                    placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö —Ü–µ–ª—è—Ö –≤ –∫–∏–±–µ—Ä—Å–ø–æ—Ä—Ç–µ..."
                    value={formData.message}
                    onChange={handleChange}
                    rows={4}
                    className="bg-gray-700/50 border-gray-600 text-white placeholder-gray-400 focus:border-blue-500 resize-none"
                  />
                  
                  <Button 
                    type="submit" 
                    disabled={isLoading}
                    className="w-full bg-red-600 hover:bg-red-700 disabled:bg-gray-600 text-white py-3 rounded-full transition-all duration-300 transform hover:scale-105 disabled:hover:scale-100"
                  >
                    {isLoading ? (
                      <>
                        <Loader2 className="w-4 h-4 mr-2 animate-spin" />
                        –û—Ç–ø—Ä–∞–≤–ª—è–µ–º...
                      </>
                    ) : (
                      <>
                        <Send className="w-4 h-4 mr-2" />
                        –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
                      </>
                    )}
                  </Button>
                </form>
              </CardContent>
            </Card>
          </div>

          <div className="space-y-8 animate-fade-in">
            <Card className="bg-gray-800/50 border-gray-700 backdrop-blur-sm hover:border-blue-500 transition-all duration-300">
              <CardContent className="p-6 flex items-center">
                <Mail className="w-8 h-8 text-blue-400 mr-4" />
                <div>
                  <h3 className="text-lg font-semibold text-white">Email</h3>
                  <p className="text-gray-400">reksar9@mail.ru</p>
                </div>
              </CardContent>
            </Card>

            <Card className="bg-gray-800/50 border-gray-700 backdrop-blur-sm hover:border-green-500 transition-all duration-300">
              <CardContent className="p-6 flex items-center">
                <Phone className="w-8 h-8 text-green-400 mr-4" />
                <div>
                  <h3 className="text-lg font-semibold text-white">–¢–µ–ª–µ—Ñ–æ–Ω</h3>
                  <p className="text-gray-400">8-968-612-17-00</p>
                </div>
              </CardContent>
            </Card>

            <Card className="bg-gray-800/50 border-gray-700 backdrop-blur-sm hover:border-purple-500 transition-all duration-300">
              <CardContent className="p-6 flex items-center">
                <MessageCircle className="w-8 h-8 text-purple-400 mr-4" />
                <div>
                  <h3 className="text-lg font-semibold text-white">Telegram</h3>
                  <p className="text-gray-400">@F1ife</p>
                </div>
              </CardContent>
            </Card>

            <Card className="bg-gray-800/50 border-gray-700 backdrop-blur-sm hover:border-green-400 transition-all duration-300">
              <CardContent className="p-6 flex items-center">
                <MessageCircle className="w-8 h-8 text-green-400 mr-4" />
                <div>
                  <h3 className="text-lg font-semibold text-white">WhatsApp</h3>
                  <p className="text-gray-400">8-968-612-17-00</p>
                </div>
              </CardContent>
            </Card>

            <Card className="bg-gray-800/50 border-gray-700 backdrop-blur-sm hover:border-purple-500 transition-all duration-300">
              <CardContent className="p-6 flex items-center">
                <Twitch className="w-8 h-8 text-purple-400 mr-4" />
                <div>
                  <h3 className="text-lg font-semibold text-white">Twitch</h3>
                  <a href="https://twitch.tv/mrflifetv" target="_blank" rel="noopener noreferrer" className="text-gray-400 hover:text-purple-400 transition-colors">
                    twitch.tv/mrflifetv
                  </a>
                </div>
              </CardContent>
            </Card>

            <Card className="bg-gray-800/50 border-gray-700 backdrop-blur-sm hover:border-indigo-500 transition-all duration-300">
              <CardContent className="p-6 flex items-center">
                <Users className="w-8 h-8 text-indigo-400 mr-4" />
                <div>
                  <h3 className="text-lg font-semibold text-white">Discord</h3>
                  <a href="https://discord.gg/Flife" target="_blank" rel="noopener noreferrer" className="text-gray-400 hover:text-indigo-400 transition-colors">
                    discord.gg/Flife
                  </a>
                </div>
              </CardContent>
            </Card>

            <div className="bg-gradient-radial from-blue-500/20 to-transparent p-8 rounded-2xl border border-gray-700">
              <h3 className="text-xl font-bold text-white mb-4">–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã</h3>
              <div className="space-y-2 text-gray-300">
                <p>–ü–Ω-–ü—Ç: 10:00 - 22:00</p>
                <p>–°–±-–í—Å: 12:00 - 20:00</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default ContactForm;
